name: integration

on:
  push:
    branches-ignore:
      - 'whitesource-remediate/**'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        opensearch_ref: ["main"]
    env:
      PYTHON_VERSION: "3.9"
    steps:
      - name: Checkout OpenSearch
        uses: actions/checkout@v4
        with:
          repository: opensearch-project/opensearch
          ref: ${{ matrix.opensearch_ref }}
          path: opensearch

      - name: Get Branch HEAD
        id: get-key
        working-directory: opensearch
        run: echo key=`git log -1 --format='%H'` >> $GITHUB_OUTPUT

      - name: Restore Cached Build
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: opensearch/distribution/archives/linux-tar/build/distributions
          key: ${{ steps.get-key.outputs.key }}

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Assemble OpenSearch
        if: steps.cache-restore.outputs.cache-hit != 'true'
        working-directory: opensearch
        run: ./gradlew :distribution:archives:linux-tar:assemble

      - name: Save Cached Build
        if: steps.cache-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: opensearch/distribution/archives/linux-tar/build/distributions
          key: ${{ steps.get-key.outputs.key }}

      - name: Run OpenSearch
        working-directory: opensearch/distribution/archives/linux-tar/build/distributions
        run: |
          tar xf opensearch-min-*
          echo "opensearch.experimental.feature.extensions.enabled: true" >> ./opensearch-*/config/opensearch.yml
          ./opensearch-*/bin/opensearch &
          for attempt in {1..20}; do sleep 5; if curl -s localhost:9200; then echo '=====> ready'; break; fi; echo '=====> waiting...'; done

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Checkout Python SDK
        uses: actions/checkout@v4
        with:
          path: opensearch-sdk-py

      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.5.1"

      - name: Run Tests
        run: |
          poetry install
          poetry self add poetry-exec-plugin
          poetry exec integration
        working-directory: opensearch-sdk-py
